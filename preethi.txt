<!doctype html>
<html>

    <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
        <title>sample</title>
        <meta name="description" content="">
        <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
        
        <style>
       
       .column {
       float: left;
       }
   
       .left {
       width: 33%;
       }
   
       .middle {
       width: 33%;
       }
       
       .right {
       width: 34%;
       }
        </style>
    </head>


<body style="background-color:lightblue;">
    <br><br>
  <i><h1 style="text-align:;font-size:30px;" >Demo of the hist Without Replacement</h1></i>
    <div class="row">
    <script>

        var margin = {
                top: 20,
                right: 20,
                bottom: 30,
                left: 50
            },
            width = 960 - margin.left - margin.right,
            height = 500 - margin.top - margin.bottom;
        var padding = 400;

        
        
        

            var myRandomNumbers = []
            var samples = 20
            var min = 0
            var max = 100
            for (i = 0; i < samples; i++){
                var random = Math.floor(Math.random() * (+max - +min)) + +min;
                myRandomNumbers.push(random);
            }
            
            var x = d3.scale.linear()
                .domain([0,106])
                .range([0,width])



            var histogram = d3.layout.histogram()   
                .bins(x.ticks(samples))
                (myRandomNumbers)

            var y = d3.scale.linear()
                .domain([0, d3.max(histogram.map(function (i) { return i.length; }))])
                .range([0, height])


            var xAxis = d3.svg.axis()
                .scale(x)
                .orient("bottom")
            
            var yAxis = d3.svg.axis()
                .scale(y)
                .orient('left')
                .tickFormat(d3.format('.5s'));

            var canvas = d3.select("body").append("svg")
                .attr("width", width)
                .attr("height", height + padding)
                .append("g")
                .attr("transform", "translate(50,0)");

            var group = canvas.append("g")
                .attr("transform", "translate(0," + 800 + ")")
                .call(xAxis)

                    

            var bars = canvas.selectAll(".bar")
                .data(histogram)
                .enter()
                .append("g")
                .attr('class', 'bar')
                .attr('transform', function (d) {
                    return "translate(50,0)";
                });

            bars.append("rect")
                .attr("x", function (d) { return x(d.x); })
                .attr("y", function (d) { return 800 - y(d.y)})
                .attr("width", function (d) { return x(d.dx); })
                .attr("height", function (d) { return y(d.y); })
                .attr("fill", function(d){ return d.y <= 2 ? "grey" : "grey"})
                .on("mouseover", function(d){d3.select(this).attr("r",10).style("fill","yellow");})
                .on("mouseout", function(d){d3.select(this).attr("r",5.5).style("fill","lightgreen");})
                
            
            bars.append("text")
                .attr("x", function (d) { return x(d.x)})
                .attr("y", function (d) { return 800 - y(d.y)})
                .attr("dy", "20px")
                .attr("dx", function (d) { return x(d.dx)/2;})
                .attr("fill", "#fff")
                .attr("text-anchor", "middle")
                .text(function (d) { return d.y;})

        

        

        
    </script>
    </div>

</html>
